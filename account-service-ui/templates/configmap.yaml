{{- if eq .Values.logging.enabled true }}
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: {{ .Release.Namespace }}
data:
  filebeat.yml: |-
    filebeat.config:
      modules:
        path: ${path.config}/modules.d/*.yml
        reload.enabled: true

    filebeat.inputs:
      - type: log
        multiline.pattern: '^java.|^[[:space:]]+(at|\.{3})\b|^Caused by:|^END:'
        multiline.negate: false
        multiline.match: after

        enabled: true
        paths:
          - /var/log/onlyone-portal/logs/*.log

    processors:
      - add_cloud_metadata: ~
      - add_docker_metadata: ~

    setup.kibana:
      host: "{{ .Values.logging.kibana.host }}"

    output.elasticsearch:
      hosts: ['{{ .Values.logging.elasticSearch.host }}']

{{ end }}


---

apiVersion: v1
kind: ConfigMap
metadata:
  name: application-config
  namespace: {{ .Release.Namespace }}
data:
  application.yml: |
    granted-role:
      account-service: {{ .Values.application.allowedRole }}

    endSessionWithoutDiscovery: true
    oidcEndSessionUrl: {{ .Values.vauthenticator.baseUrl }}/oidc/logout
    auth.oidcIss: {{ .Values.vauthenticator.baseUrl }}
    logging.file.name: /var/log/onlyone-portal/logs/${spring.application.name}.log

    postLogoutRedirectUri: {{ .Values.application.baseUrl }}/account/site/index.html

    spring:
      main:
        lazy-initialization: true

      cache:
        cache-names:
          - account-service-ui.i18n.messages

      session:
        timeout: 30m
        store-type: redis
        redis:
          namespace: account-service-ui:session

      security:
        oauth2:
          client:
            registration:
              client:
                client-id: {{ .Values.application.sso.clientApp.clientId }}
                client-secret: {{ .Values.application.sso.clientApp.clientSecret }}
                client-name: VAuthenticator
                provider: vauthenticator
                scope:
                  - openid
                  - profile
                  - email
                  - i18n-message:reader
                redirect-uri: {{ .Values.application.baseUrl }}/account/login/oauth2/code/client
                client-authentication-method: basic
                authorization-grant-type: authorization_code
            provider:
              vauthenticator:
                authorization-uri: {{ .Values.vauthenticator.baseUrl }}/oauth2/authorize
                token-uri: {{ .Values.vauthenticator.backChannelBaseUrl }}/oauth2/token
                user-info-uri: {{ .Values.vauthenticator.backChannelBaseUrl }}/userinfo
                user-info-authentication-method: header
                jwk-set-uri: {{ .Values.vauthenticator.backChannelBaseUrl }}/oauth2/jwks
                user-name-attribute: email

      redis:
        host: {{ .Values.application.redis.host }}

      sleuth:
        redis:
          enabled: false

    server:
      port: 8080
      forward-headers-strategy: framework
      servlet:
        context-path: /account
      http2:
        enabled: true
      compression:
        enabled: true
        min-response-size: 1KB

    management:
      server:
        port: 8081
        servlet:
          context-path: /
      endpoints:
        web:
          exposure:
            include: "*"
      endpoint:
        shutdown:
          enabled: true
        health:
          show-details: ALWAYS

    vauthenticator:
      session-management:
        enabled: true
        rp-iframe:
          host: {{ .Values.application.baseUrl }}/account
          polling-rate: {{ .Values.application.sessionManagement.pollingRate }}
          origin: {{ .Values.vauthenticator.baseUrl }}
          logout-uri: /account/logout
      client:
        registrationId: client
      host: {{ .Values.vauthenticator.baseUrl }}
      backChannelHost: {{ .Values.vauthenticator.backChannelBaseUrl }}

    i18n-messages:
      cache:
        updater:
          listener:
            sleeping: {{ .Values.application.i18n.listener.sleeping }}
            queueUrl: {{ .Values.application.i18n.listener.queueUrl }}
            maxNumberOfMessages: {{ .Values.application.i18n.listener.maxNumberOfMessages }}
            visibilityTimeout: {{ .Values.application.i18n.listener.visibilityTimeout }}
            waitTimeSeconds: {{ .Values.application.i18n.listener.waitTimeSeconds }}
      ttl: {{ .Values.application.i18n.ttl }}
      base-url: {{ .Values.application.i18n.baseUrl }}