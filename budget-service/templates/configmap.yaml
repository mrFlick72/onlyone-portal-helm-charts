{{- if eq .Values.logging.enabled true }}
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: {{ .Release.Namespace }}
data:
  filebeat.yml: |-
    filebeat.config:
      modules:
        path: ${path.config}/modules.d/*.yml
        reload.enabled: true

    filebeat.inputs:
      - type: log
        multiline.pattern: '^java.|^[[:space:]]+(at|\.{3})\b|^Caused by:|^END:'
        multiline.negate: false
        multiline.match: after

        enabled: true
        paths:
          - /var/log/onlyone-portal/logs/*.log

    processors:
      - add_cloud_metadata: ~
      - add_docker_metadata: ~

    setup.kibana:
      host: "{{ .Values.logging.kibana.host }}"

    output.elasticsearch:
      hosts: ['{{ .Values.logging.elasticSearch.host }}']

{{ end }}


---

apiVersion: v1
kind: ConfigMap
metadata:
  name: application-config
  namespace: {{ .Release.Namespace }}
data:
  application.yml: |
    granted-role:
      budget-service: {{ .Values.application.allowedRole }}

    logging.file.name: /var/log/onlyone-portal/logs/${spring.application.name}.log


    spring:
      main:
        lazy-initialization: true

      datasource:
        url: jdbc:postgresql://{{ .Values.application.database.host }}/{{ .Values.application.database.schema }}
        username: {{ .Values.application.database.username }}
        password: {{ .Values.application.database.password }}
        driver-class-name: org.postgresql.Driver

      security:
        oauth2:
          resourceserver:
            jwt:
              jwk-set-uri: ${vauthenticator.host}/oauth2/jwks

    server:
      port: 8080
      servlet:
        context-path: /
      http2:
        enabled: true
      compression:
        enabled: true
        min-response-size: 1KB

    management:
      server:
        port: 8081
        servlet:
          context-path: /
      endpoints:
        web:
          exposure:
            include: "*"
      endpoint:
        shutdown:
          enabled: true
        health:
          show-details: ALWAYS

    vauthenticator:
      host: {{ .Values.vauthenticator.baseUrl }}
    budget-service:
      dynamo-db:
        search-tags:
          table-name: {{ .Values.application.dynamoDb.searchTags.tableName }}
        budget-expense:
          table-name: {{ .Values.application.dynamoDb.budgetExpense.tableName }}
        budget-revenue:
          table-name: {{ .Values.application.dynamoDb.budgetRevenue.tableName }}